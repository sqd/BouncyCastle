# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: bfcp.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='bfcp.proto',
  package='bfcp',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\nbfcp.proto\x12\x04\x62\x66\x63p\"\xc3\x03\n\rBouncyMessage\x12\x33\n\x11\x64iscovery_request\x18\x01 \x01(\x0b\x32\x16.bfcp.DiscoveryRequestH\x00\x12%\n\nnode_table\x18\x02 \x01(\x0b\x32\x0f.bfcp.NodeTableH\x00\x12\x35\n\x12\x63onnection_request\x18\x03 \x01(\x0b\x32\x17.bfcp.ConnectionRequestH\x00\x12\x37\n\x13\x63onnection_response\x18\x04 \x01(\x0b\x32\x18.bfcp.ConnectionResponseH\x00\x12/\n\x0f\x63hannel_request\x18\x05 \x01(\x0b\x32\x14.bfcp.ChannelRequestH\x00\x12\x31\n\x10\x63hannel_response\x18\x06 \x01(\x0b\x32\x15.bfcp.ChannelResponseH\x00\x12\x34\n\x12to_original_sender\x18\x07 \x01(\x0b\x32\x16.bfcp.ToOriginalSenderH\x00\x12\x30\n\x10to_target_server\x18\x08 \x01(\x0b\x32\x14.bfcp.ToTargetServerH\x00\x12\x0f\n\x07\x62\x61llast\x18\t \x01(\x0c\x42\t\n\x07message\"!\n\x0cRsaChallenge\x12\x11\n\tencrypted\x18\x01 \x01(\x0c\")\n\x14RsaChallengeResponse\x12\x11\n\tdecrypted\x18\x01 \x01(\x0c\"2\n\tRsaPubKey\x12\x0f\n\x07modulus\x18\x01 \x01(\x0c\x12\x14\n\x0cpub_exponent\x18\x02 \x01(\x0c\"\x12\n\x10\x44iscoveryRequest\"Z\n\x04Node\x12#\n\npublic_key\x18\x01 \x01(\x0b\x32\x0f.bfcp.RsaPubKey\x12\x1a\n\x12last_known_address\x18\x02 \x01(\t\x12\x11\n\tlast_port\x18\x03 \x01(\x05\"_\n\x0eNodeTableEntry\x12\x18\n\x04node\x18\x01 \x01(\x0b\x32\n.bfcp.Node\x12\x13\n\x0btrust_score\x18\x02 \x01(\x02\x12\r\n\x05\x61vg_n\x18\x03 \x01(\x02\x12\x0f\n\x07\x61vg_sum\x18\x04 \x01(\x02\"2\n\tNodeTable\x12%\n\x07\x65ntries\x18\x01 \x03(\x0b\x32\x14.bfcp.NodeTableEntry\"?\n\x17\x43onnectionRoutingParams\x12\x0c\n\x04uuid\x18\x01 \x01(\t\x12\x16\n\x0eremaining_hops\x18\x02 \x01(\x05\"\x8d\x02\n\x11\x43onnectionRequest\x12\x38\n\x11\x63onnection_params\x18\x01 \x01(\x0b\x32\x1d.bfcp.ConnectionRoutingParams\x12\x36\n\x14\x65nd_node_requirement\x18\x02 \x01(\x0b\x32\x18.bfcp.EndNodeRequirement\x12\x1d\n\x15target_server_address\x18\x03 \x01(\t\x12\x1a\n\x12target_server_port\x18\x04 \x01(\x05\x12.\n\x15sender_connection_key\x18\x05 \x01(\x0b\x32\x0f.bfcp.RsaPubKey\x12\x1b\n\x13signature_challenge\x18\x06 \x01(\x0c\"\x93\x01\n\x12\x45ndNodeRequirement\x12\x13\n\tip_subnet\x18\x01 \x01(\x05H\x00\x12\x11\n\x07\x63ountry\x18\x02 \x01(\x05H\x00\x12!\n\x02or\x18\x03 \x01(\x0b\x32\x13.bfcp.OrRequirementH\x00\x12#\n\x03\x61nd\x18\x04 \x01(\x0b\x32\x14.bfcp.AndRequirementH\x00\x42\r\n\x0brequirement\"?\n\rOrRequirement\x12.\n\x0crequirements\x18\x01 \x03(\x0b\x32\x18.bfcp.EndNodeRequirement\"@\n\x0e\x41ndRequirement\x12.\n\x0crequirements\x18\x01 \x03(\x0b\x32\x18.bfcp.EndNodeRequirement\"\x92\x01\n\x12\x43onnectionResponse\x12\x0c\n\x04uuid\x18\x01 \x01(\t\x12%\n\x11selected_end_node\x18\x02 \x01(\x0b\x32\n.bfcp.Node\x12$\n\x1csignature_challenge_response\x18\x03 \x01(\x0c\x12!\n\x0bsession_key\x18\x04 \x01(\x0b\x32\x0c.bfcp.AESKey\"{\n\x0e\x43hannelRequest\x12\x1c\n\x08\x65nd_node\x18\x01 \x01(\x0b\x32\n.bfcp.Node\x12\x35\n\x0erouting_params\x18\x02 \x01(\x0b\x32\x1d.bfcp.ConnectionRoutingParams\x12\x14\n\x0c\x63hannel_uuid\x18\x03 \x01(\t\"6\n\x0f\x43hannelResponse\x12#\n\nchannel_id\x18\x01 \x01(\x0b\x32\x0f.bfcp.ChannelID\":\n\tChannelID\x12\x17\n\x0f\x63onnection_uuid\x18\x01 \x01(\t\x12\x14\n\x0c\x63hannel_uuid\x18\x02 \x01(\t\"2\n\x10\x42ouncyTcpMessage\x12\x0f\n\x07payload\x18\x01 \x01(\x0c\x12\r\n\x05index\x18\x02 \x01(\x03\"F\n\x0eToTargetServer\x12\x0f\n\x07payload\x18\x01 \x01(\x0c\x12#\n\nchannel_id\x18\x02 \x01(\x0b\x32\x0f.bfcp.ChannelID\"H\n\x10ToOriginalSender\x12\x0f\n\x07payload\x18\x01 \x01(\x0c\x12#\n\nchannel_id\x18\x02 \x01(\x0b\x32\x0f.bfcp.ChannelID\"C\n\tPeerHello\x12 \n\x07pub_key\x18\x01 \x01(\x0b\x32\x0f.bfcp.RsaPubKey\x12\x14\n\x0cserving_port\x18\x02 \x01(\x05\"\x15\n\x06\x41\x45SKey\x12\x0b\n\x03key\x18\x01 \x01(\x0c\x62\x06proto3')
)




_BOUNCYMESSAGE = _descriptor.Descriptor(
  name='BouncyMessage',
  full_name='bfcp.BouncyMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='discovery_request', full_name='bfcp.BouncyMessage.discovery_request', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='node_table', full_name='bfcp.BouncyMessage.node_table', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='connection_request', full_name='bfcp.BouncyMessage.connection_request', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='connection_response', full_name='bfcp.BouncyMessage.connection_response', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='channel_request', full_name='bfcp.BouncyMessage.channel_request', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='channel_response', full_name='bfcp.BouncyMessage.channel_response', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='to_original_sender', full_name='bfcp.BouncyMessage.to_original_sender', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='to_target_server', full_name='bfcp.BouncyMessage.to_target_server', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ballast', full_name='bfcp.BouncyMessage.ballast', index=8,
      number=9, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='message', full_name='bfcp.BouncyMessage.message',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=21,
  serialized_end=472,
)


_RSACHALLENGE = _descriptor.Descriptor(
  name='RsaChallenge',
  full_name='bfcp.RsaChallenge',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='encrypted', full_name='bfcp.RsaChallenge.encrypted', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=474,
  serialized_end=507,
)


_RSACHALLENGERESPONSE = _descriptor.Descriptor(
  name='RsaChallengeResponse',
  full_name='bfcp.RsaChallengeResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='decrypted', full_name='bfcp.RsaChallengeResponse.decrypted', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=509,
  serialized_end=550,
)


_RSAPUBKEY = _descriptor.Descriptor(
  name='RsaPubKey',
  full_name='bfcp.RsaPubKey',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='modulus', full_name='bfcp.RsaPubKey.modulus', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pub_exponent', full_name='bfcp.RsaPubKey.pub_exponent', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=552,
  serialized_end=602,
)


_DISCOVERYREQUEST = _descriptor.Descriptor(
  name='DiscoveryRequest',
  full_name='bfcp.DiscoveryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=604,
  serialized_end=622,
)


_NODE = _descriptor.Descriptor(
  name='Node',
  full_name='bfcp.Node',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='public_key', full_name='bfcp.Node.public_key', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='last_known_address', full_name='bfcp.Node.last_known_address', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='last_port', full_name='bfcp.Node.last_port', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=624,
  serialized_end=714,
)


_NODETABLEENTRY = _descriptor.Descriptor(
  name='NodeTableEntry',
  full_name='bfcp.NodeTableEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='node', full_name='bfcp.NodeTableEntry.node', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='trust_score', full_name='bfcp.NodeTableEntry.trust_score', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='avg_n', full_name='bfcp.NodeTableEntry.avg_n', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='avg_sum', full_name='bfcp.NodeTableEntry.avg_sum', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=716,
  serialized_end=811,
)


_NODETABLE = _descriptor.Descriptor(
  name='NodeTable',
  full_name='bfcp.NodeTable',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='entries', full_name='bfcp.NodeTable.entries', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=813,
  serialized_end=863,
)


_CONNECTIONROUTINGPARAMS = _descriptor.Descriptor(
  name='ConnectionRoutingParams',
  full_name='bfcp.ConnectionRoutingParams',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='uuid', full_name='bfcp.ConnectionRoutingParams.uuid', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='remaining_hops', full_name='bfcp.ConnectionRoutingParams.remaining_hops', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=865,
  serialized_end=928,
)


_CONNECTIONREQUEST = _descriptor.Descriptor(
  name='ConnectionRequest',
  full_name='bfcp.ConnectionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='connection_params', full_name='bfcp.ConnectionRequest.connection_params', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='end_node_requirement', full_name='bfcp.ConnectionRequest.end_node_requirement', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='target_server_address', full_name='bfcp.ConnectionRequest.target_server_address', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='target_server_port', full_name='bfcp.ConnectionRequest.target_server_port', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sender_connection_key', full_name='bfcp.ConnectionRequest.sender_connection_key', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='signature_challenge', full_name='bfcp.ConnectionRequest.signature_challenge', index=5,
      number=6, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=931,
  serialized_end=1200,
)


_ENDNODEREQUIREMENT = _descriptor.Descriptor(
  name='EndNodeRequirement',
  full_name='bfcp.EndNodeRequirement',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ip_subnet', full_name='bfcp.EndNodeRequirement.ip_subnet', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='country', full_name='bfcp.EndNodeRequirement.country', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='or', full_name='bfcp.EndNodeRequirement.or', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='and', full_name='bfcp.EndNodeRequirement.and', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='requirement', full_name='bfcp.EndNodeRequirement.requirement',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1203,
  serialized_end=1350,
)


_ORREQUIREMENT = _descriptor.Descriptor(
  name='OrRequirement',
  full_name='bfcp.OrRequirement',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='requirements', full_name='bfcp.OrRequirement.requirements', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1352,
  serialized_end=1415,
)


_ANDREQUIREMENT = _descriptor.Descriptor(
  name='AndRequirement',
  full_name='bfcp.AndRequirement',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='requirements', full_name='bfcp.AndRequirement.requirements', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1417,
  serialized_end=1481,
)


_CONNECTIONRESPONSE = _descriptor.Descriptor(
  name='ConnectionResponse',
  full_name='bfcp.ConnectionResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='uuid', full_name='bfcp.ConnectionResponse.uuid', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='selected_end_node', full_name='bfcp.ConnectionResponse.selected_end_node', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='signature_challenge_response', full_name='bfcp.ConnectionResponse.signature_challenge_response', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='session_key', full_name='bfcp.ConnectionResponse.session_key', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1484,
  serialized_end=1630,
)


_CHANNELREQUEST = _descriptor.Descriptor(
  name='ChannelRequest',
  full_name='bfcp.ChannelRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='end_node', full_name='bfcp.ChannelRequest.end_node', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='routing_params', full_name='bfcp.ChannelRequest.routing_params', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='channel_uuid', full_name='bfcp.ChannelRequest.channel_uuid', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1632,
  serialized_end=1755,
)


_CHANNELRESPONSE = _descriptor.Descriptor(
  name='ChannelResponse',
  full_name='bfcp.ChannelResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='channel_id', full_name='bfcp.ChannelResponse.channel_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1757,
  serialized_end=1811,
)


_CHANNELID = _descriptor.Descriptor(
  name='ChannelID',
  full_name='bfcp.ChannelID',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='connection_uuid', full_name='bfcp.ChannelID.connection_uuid', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='channel_uuid', full_name='bfcp.ChannelID.channel_uuid', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1813,
  serialized_end=1871,
)


_BOUNCYTCPMESSAGE = _descriptor.Descriptor(
  name='BouncyTcpMessage',
  full_name='bfcp.BouncyTcpMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='payload', full_name='bfcp.BouncyTcpMessage.payload', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='index', full_name='bfcp.BouncyTcpMessage.index', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1873,
  serialized_end=1923,
)


_TOTARGETSERVER = _descriptor.Descriptor(
  name='ToTargetServer',
  full_name='bfcp.ToTargetServer',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='payload', full_name='bfcp.ToTargetServer.payload', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='channel_id', full_name='bfcp.ToTargetServer.channel_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1925,
  serialized_end=1995,
)


_TOORIGINALSENDER = _descriptor.Descriptor(
  name='ToOriginalSender',
  full_name='bfcp.ToOriginalSender',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='payload', full_name='bfcp.ToOriginalSender.payload', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='channel_id', full_name='bfcp.ToOriginalSender.channel_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1997,
  serialized_end=2069,
)


_PEERHELLO = _descriptor.Descriptor(
  name='PeerHello',
  full_name='bfcp.PeerHello',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pub_key', full_name='bfcp.PeerHello.pub_key', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='serving_port', full_name='bfcp.PeerHello.serving_port', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2071,
  serialized_end=2138,
)


_AESKEY = _descriptor.Descriptor(
  name='AESKey',
  full_name='bfcp.AESKey',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='bfcp.AESKey.key', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2140,
  serialized_end=2161,
)

_BOUNCYMESSAGE.fields_by_name['discovery_request'].message_type = _DISCOVERYREQUEST
_BOUNCYMESSAGE.fields_by_name['node_table'].message_type = _NODETABLE
_BOUNCYMESSAGE.fields_by_name['connection_request'].message_type = _CONNECTIONREQUEST
_BOUNCYMESSAGE.fields_by_name['connection_response'].message_type = _CONNECTIONRESPONSE
_BOUNCYMESSAGE.fields_by_name['channel_request'].message_type = _CHANNELREQUEST
_BOUNCYMESSAGE.fields_by_name['channel_response'].message_type = _CHANNELRESPONSE
_BOUNCYMESSAGE.fields_by_name['to_original_sender'].message_type = _TOORIGINALSENDER
_BOUNCYMESSAGE.fields_by_name['to_target_server'].message_type = _TOTARGETSERVER
_BOUNCYMESSAGE.oneofs_by_name['message'].fields.append(
  _BOUNCYMESSAGE.fields_by_name['discovery_request'])
_BOUNCYMESSAGE.fields_by_name['discovery_request'].containing_oneof = _BOUNCYMESSAGE.oneofs_by_name['message']
_BOUNCYMESSAGE.oneofs_by_name['message'].fields.append(
  _BOUNCYMESSAGE.fields_by_name['node_table'])
_BOUNCYMESSAGE.fields_by_name['node_table'].containing_oneof = _BOUNCYMESSAGE.oneofs_by_name['message']
_BOUNCYMESSAGE.oneofs_by_name['message'].fields.append(
  _BOUNCYMESSAGE.fields_by_name['connection_request'])
_BOUNCYMESSAGE.fields_by_name['connection_request'].containing_oneof = _BOUNCYMESSAGE.oneofs_by_name['message']
_BOUNCYMESSAGE.oneofs_by_name['message'].fields.append(
  _BOUNCYMESSAGE.fields_by_name['connection_response'])
_BOUNCYMESSAGE.fields_by_name['connection_response'].containing_oneof = _BOUNCYMESSAGE.oneofs_by_name['message']
_BOUNCYMESSAGE.oneofs_by_name['message'].fields.append(
  _BOUNCYMESSAGE.fields_by_name['channel_request'])
_BOUNCYMESSAGE.fields_by_name['channel_request'].containing_oneof = _BOUNCYMESSAGE.oneofs_by_name['message']
_BOUNCYMESSAGE.oneofs_by_name['message'].fields.append(
  _BOUNCYMESSAGE.fields_by_name['channel_response'])
_BOUNCYMESSAGE.fields_by_name['channel_response'].containing_oneof = _BOUNCYMESSAGE.oneofs_by_name['message']
_BOUNCYMESSAGE.oneofs_by_name['message'].fields.append(
  _BOUNCYMESSAGE.fields_by_name['to_original_sender'])
_BOUNCYMESSAGE.fields_by_name['to_original_sender'].containing_oneof = _BOUNCYMESSAGE.oneofs_by_name['message']
_BOUNCYMESSAGE.oneofs_by_name['message'].fields.append(
  _BOUNCYMESSAGE.fields_by_name['to_target_server'])
_BOUNCYMESSAGE.fields_by_name['to_target_server'].containing_oneof = _BOUNCYMESSAGE.oneofs_by_name['message']
_NODE.fields_by_name['public_key'].message_type = _RSAPUBKEY
_NODETABLEENTRY.fields_by_name['node'].message_type = _NODE
_NODETABLE.fields_by_name['entries'].message_type = _NODETABLEENTRY
_CONNECTIONREQUEST.fields_by_name['connection_params'].message_type = _CONNECTIONROUTINGPARAMS
_CONNECTIONREQUEST.fields_by_name['end_node_requirement'].message_type = _ENDNODEREQUIREMENT
_CONNECTIONREQUEST.fields_by_name['sender_connection_key'].message_type = _RSAPUBKEY
_ENDNODEREQUIREMENT.fields_by_name['or'].message_type = _ORREQUIREMENT
_ENDNODEREQUIREMENT.fields_by_name['and'].message_type = _ANDREQUIREMENT
_ENDNODEREQUIREMENT.oneofs_by_name['requirement'].fields.append(
  _ENDNODEREQUIREMENT.fields_by_name['ip_subnet'])
_ENDNODEREQUIREMENT.fields_by_name['ip_subnet'].containing_oneof = _ENDNODEREQUIREMENT.oneofs_by_name['requirement']
_ENDNODEREQUIREMENT.oneofs_by_name['requirement'].fields.append(
  _ENDNODEREQUIREMENT.fields_by_name['country'])
_ENDNODEREQUIREMENT.fields_by_name['country'].containing_oneof = _ENDNODEREQUIREMENT.oneofs_by_name['requirement']
_ENDNODEREQUIREMENT.oneofs_by_name['requirement'].fields.append(
  _ENDNODEREQUIREMENT.fields_by_name['or'])
_ENDNODEREQUIREMENT.fields_by_name['or'].containing_oneof = _ENDNODEREQUIREMENT.oneofs_by_name['requirement']
_ENDNODEREQUIREMENT.oneofs_by_name['requirement'].fields.append(
  _ENDNODEREQUIREMENT.fields_by_name['and'])
_ENDNODEREQUIREMENT.fields_by_name['and'].containing_oneof = _ENDNODEREQUIREMENT.oneofs_by_name['requirement']
_ORREQUIREMENT.fields_by_name['requirements'].message_type = _ENDNODEREQUIREMENT
_ANDREQUIREMENT.fields_by_name['requirements'].message_type = _ENDNODEREQUIREMENT
_CONNECTIONRESPONSE.fields_by_name['selected_end_node'].message_type = _NODE
_CONNECTIONRESPONSE.fields_by_name['session_key'].message_type = _AESKEY
_CHANNELREQUEST.fields_by_name['end_node'].message_type = _NODE
_CHANNELREQUEST.fields_by_name['routing_params'].message_type = _CONNECTIONROUTINGPARAMS
_CHANNELRESPONSE.fields_by_name['channel_id'].message_type = _CHANNELID
_TOTARGETSERVER.fields_by_name['channel_id'].message_type = _CHANNELID
_TOORIGINALSENDER.fields_by_name['channel_id'].message_type = _CHANNELID
_PEERHELLO.fields_by_name['pub_key'].message_type = _RSAPUBKEY
DESCRIPTOR.message_types_by_name['BouncyMessage'] = _BOUNCYMESSAGE
DESCRIPTOR.message_types_by_name['RsaChallenge'] = _RSACHALLENGE
DESCRIPTOR.message_types_by_name['RsaChallengeResponse'] = _RSACHALLENGERESPONSE
DESCRIPTOR.message_types_by_name['RsaPubKey'] = _RSAPUBKEY
DESCRIPTOR.message_types_by_name['DiscoveryRequest'] = _DISCOVERYREQUEST
DESCRIPTOR.message_types_by_name['Node'] = _NODE
DESCRIPTOR.message_types_by_name['NodeTableEntry'] = _NODETABLEENTRY
DESCRIPTOR.message_types_by_name['NodeTable'] = _NODETABLE
DESCRIPTOR.message_types_by_name['ConnectionRoutingParams'] = _CONNECTIONROUTINGPARAMS
DESCRIPTOR.message_types_by_name['ConnectionRequest'] = _CONNECTIONREQUEST
DESCRIPTOR.message_types_by_name['EndNodeRequirement'] = _ENDNODEREQUIREMENT
DESCRIPTOR.message_types_by_name['OrRequirement'] = _ORREQUIREMENT
DESCRIPTOR.message_types_by_name['AndRequirement'] = _ANDREQUIREMENT
DESCRIPTOR.message_types_by_name['ConnectionResponse'] = _CONNECTIONRESPONSE
DESCRIPTOR.message_types_by_name['ChannelRequest'] = _CHANNELREQUEST
DESCRIPTOR.message_types_by_name['ChannelResponse'] = _CHANNELRESPONSE
DESCRIPTOR.message_types_by_name['ChannelID'] = _CHANNELID
DESCRIPTOR.message_types_by_name['BouncyTcpMessage'] = _BOUNCYTCPMESSAGE
DESCRIPTOR.message_types_by_name['ToTargetServer'] = _TOTARGETSERVER
DESCRIPTOR.message_types_by_name['ToOriginalSender'] = _TOORIGINALSENDER
DESCRIPTOR.message_types_by_name['PeerHello'] = _PEERHELLO
DESCRIPTOR.message_types_by_name['AESKey'] = _AESKEY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

BouncyMessage = _reflection.GeneratedProtocolMessageType('BouncyMessage', (_message.Message,), dict(
  DESCRIPTOR = _BOUNCYMESSAGE,
  __module__ = 'bfcp_pb2'
  # @@protoc_insertion_point(class_scope:bfcp.BouncyMessage)
  ))
_sym_db.RegisterMessage(BouncyMessage)

RsaChallenge = _reflection.GeneratedProtocolMessageType('RsaChallenge', (_message.Message,), dict(
  DESCRIPTOR = _RSACHALLENGE,
  __module__ = 'bfcp_pb2'
  # @@protoc_insertion_point(class_scope:bfcp.RsaChallenge)
  ))
_sym_db.RegisterMessage(RsaChallenge)

RsaChallengeResponse = _reflection.GeneratedProtocolMessageType('RsaChallengeResponse', (_message.Message,), dict(
  DESCRIPTOR = _RSACHALLENGERESPONSE,
  __module__ = 'bfcp_pb2'
  # @@protoc_insertion_point(class_scope:bfcp.RsaChallengeResponse)
  ))
_sym_db.RegisterMessage(RsaChallengeResponse)

RsaPubKey = _reflection.GeneratedProtocolMessageType('RsaPubKey', (_message.Message,), dict(
  DESCRIPTOR = _RSAPUBKEY,
  __module__ = 'bfcp_pb2'
  # @@protoc_insertion_point(class_scope:bfcp.RsaPubKey)
  ))
_sym_db.RegisterMessage(RsaPubKey)

DiscoveryRequest = _reflection.GeneratedProtocolMessageType('DiscoveryRequest', (_message.Message,), dict(
  DESCRIPTOR = _DISCOVERYREQUEST,
  __module__ = 'bfcp_pb2'
  # @@protoc_insertion_point(class_scope:bfcp.DiscoveryRequest)
  ))
_sym_db.RegisterMessage(DiscoveryRequest)

Node = _reflection.GeneratedProtocolMessageType('Node', (_message.Message,), dict(
  DESCRIPTOR = _NODE,
  __module__ = 'bfcp_pb2'
  # @@protoc_insertion_point(class_scope:bfcp.Node)
  ))
_sym_db.RegisterMessage(Node)

NodeTableEntry = _reflection.GeneratedProtocolMessageType('NodeTableEntry', (_message.Message,), dict(
  DESCRIPTOR = _NODETABLEENTRY,
  __module__ = 'bfcp_pb2'
  # @@protoc_insertion_point(class_scope:bfcp.NodeTableEntry)
  ))
_sym_db.RegisterMessage(NodeTableEntry)

NodeTable = _reflection.GeneratedProtocolMessageType('NodeTable', (_message.Message,), dict(
  DESCRIPTOR = _NODETABLE,
  __module__ = 'bfcp_pb2'
  # @@protoc_insertion_point(class_scope:bfcp.NodeTable)
  ))
_sym_db.RegisterMessage(NodeTable)

ConnectionRoutingParams = _reflection.GeneratedProtocolMessageType('ConnectionRoutingParams', (_message.Message,), dict(
  DESCRIPTOR = _CONNECTIONROUTINGPARAMS,
  __module__ = 'bfcp_pb2'
  # @@protoc_insertion_point(class_scope:bfcp.ConnectionRoutingParams)
  ))
_sym_db.RegisterMessage(ConnectionRoutingParams)

ConnectionRequest = _reflection.GeneratedProtocolMessageType('ConnectionRequest', (_message.Message,), dict(
  DESCRIPTOR = _CONNECTIONREQUEST,
  __module__ = 'bfcp_pb2'
  # @@protoc_insertion_point(class_scope:bfcp.ConnectionRequest)
  ))
_sym_db.RegisterMessage(ConnectionRequest)

EndNodeRequirement = _reflection.GeneratedProtocolMessageType('EndNodeRequirement', (_message.Message,), dict(
  DESCRIPTOR = _ENDNODEREQUIREMENT,
  __module__ = 'bfcp_pb2'
  # @@protoc_insertion_point(class_scope:bfcp.EndNodeRequirement)
  ))
_sym_db.RegisterMessage(EndNodeRequirement)

OrRequirement = _reflection.GeneratedProtocolMessageType('OrRequirement', (_message.Message,), dict(
  DESCRIPTOR = _ORREQUIREMENT,
  __module__ = 'bfcp_pb2'
  # @@protoc_insertion_point(class_scope:bfcp.OrRequirement)
  ))
_sym_db.RegisterMessage(OrRequirement)

AndRequirement = _reflection.GeneratedProtocolMessageType('AndRequirement', (_message.Message,), dict(
  DESCRIPTOR = _ANDREQUIREMENT,
  __module__ = 'bfcp_pb2'
  # @@protoc_insertion_point(class_scope:bfcp.AndRequirement)
  ))
_sym_db.RegisterMessage(AndRequirement)

ConnectionResponse = _reflection.GeneratedProtocolMessageType('ConnectionResponse', (_message.Message,), dict(
  DESCRIPTOR = _CONNECTIONRESPONSE,
  __module__ = 'bfcp_pb2'
  # @@protoc_insertion_point(class_scope:bfcp.ConnectionResponse)
  ))
_sym_db.RegisterMessage(ConnectionResponse)

ChannelRequest = _reflection.GeneratedProtocolMessageType('ChannelRequest', (_message.Message,), dict(
  DESCRIPTOR = _CHANNELREQUEST,
  __module__ = 'bfcp_pb2'
  # @@protoc_insertion_point(class_scope:bfcp.ChannelRequest)
  ))
_sym_db.RegisterMessage(ChannelRequest)

ChannelResponse = _reflection.GeneratedProtocolMessageType('ChannelResponse', (_message.Message,), dict(
  DESCRIPTOR = _CHANNELRESPONSE,
  __module__ = 'bfcp_pb2'
  # @@protoc_insertion_point(class_scope:bfcp.ChannelResponse)
  ))
_sym_db.RegisterMessage(ChannelResponse)

ChannelID = _reflection.GeneratedProtocolMessageType('ChannelID', (_message.Message,), dict(
  DESCRIPTOR = _CHANNELID,
  __module__ = 'bfcp_pb2'
  # @@protoc_insertion_point(class_scope:bfcp.ChannelID)
  ))
_sym_db.RegisterMessage(ChannelID)

BouncyTcpMessage = _reflection.GeneratedProtocolMessageType('BouncyTcpMessage', (_message.Message,), dict(
  DESCRIPTOR = _BOUNCYTCPMESSAGE,
  __module__ = 'bfcp_pb2'
  # @@protoc_insertion_point(class_scope:bfcp.BouncyTcpMessage)
  ))
_sym_db.RegisterMessage(BouncyTcpMessage)

ToTargetServer = _reflection.GeneratedProtocolMessageType('ToTargetServer', (_message.Message,), dict(
  DESCRIPTOR = _TOTARGETSERVER,
  __module__ = 'bfcp_pb2'
  # @@protoc_insertion_point(class_scope:bfcp.ToTargetServer)
  ))
_sym_db.RegisterMessage(ToTargetServer)

ToOriginalSender = _reflection.GeneratedProtocolMessageType('ToOriginalSender', (_message.Message,), dict(
  DESCRIPTOR = _TOORIGINALSENDER,
  __module__ = 'bfcp_pb2'
  # @@protoc_insertion_point(class_scope:bfcp.ToOriginalSender)
  ))
_sym_db.RegisterMessage(ToOriginalSender)

PeerHello = _reflection.GeneratedProtocolMessageType('PeerHello', (_message.Message,), dict(
  DESCRIPTOR = _PEERHELLO,
  __module__ = 'bfcp_pb2'
  # @@protoc_insertion_point(class_scope:bfcp.PeerHello)
  ))
_sym_db.RegisterMessage(PeerHello)

AESKey = _reflection.GeneratedProtocolMessageType('AESKey', (_message.Message,), dict(
  DESCRIPTOR = _AESKEY,
  __module__ = 'bfcp_pb2'
  # @@protoc_insertion_point(class_scope:bfcp.AESKey)
  ))
_sym_db.RegisterMessage(AESKey)


# @@protoc_insertion_point(module_scope)
